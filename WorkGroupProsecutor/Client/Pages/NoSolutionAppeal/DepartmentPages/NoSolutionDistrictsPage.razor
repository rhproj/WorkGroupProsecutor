@page "/nosolutiondistrictspage/{Period}/{Year:int}"
@page "/nosolutiondistrictspage/{DepartmentName}/{Period}/{Year:int}"
@*DEP, GUE*@

<div class="container-fluid mt-2 text-center">
    <h4 class="text-center my-2">Реестр обращений, по которым приняты решения: "Оставлено без разрешения и (или) приобщено к НП, в том числе списано без уведомления" и "Оставлено без разрешения – возвращено заявителю"</h4>
    <h3 class="text-center mb-3">@ReferencePeriod.Quarters[Period] @Year г.</h3>
    @if (districtsList == null)
    {
        <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 780px; background-repeat: no-repeat; background-position: center;">
            <div class="d-flex justify-content-center  align-items-center" style="height: 700px">
                <div style="color: rgb(0,0,120)" class="la-timer la-2x">
                    <div></div>
                </div>
            </div>
        </div>
    }
    else if (districtsList.Length == 0)
    {
        <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 780px; background-repeat: no-repeat; background-position: center;">
            <h2 class="text-secondary">Отсутствуют данные за заданный период</h2>
        </div>
    }
    else
    {
        <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 780px; background-repeat: no-repeat; background-position: center;">
            <div>
                <table class="table table-striped align-middle text-center ">
                    <thead class="table-primary">
                        <tr>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < districtsList.Length; i++)
                        {
                            <tr style="height:100px">
                                <td class="fs-3">
                                    <div class="d-flex justify-content-center">
                                        <div class="my-3">@districtsDescriptionList[i]</div>
                                        <div class="mx-4">
                                            @if (!string.IsNullOrEmpty(DepartmentName))
                                            {
                                                <a href="/nosolutionappealassessment/@districtsList[i]/@DepartmentName/@Period/@Year" class="btn btn-outline-primary"><img src="img/edit32.png" width="50" height="50" class="mt-2" /></a>
                                            }
                                            else
                                            {
                                                <a href="/nosolutionappealassessment/@districtsList[i]/@Period/@Year" class="btn btn-outline-primary"><img src="img/edit32.png" width="50" height="50" class="mt-2" /></a>
                                            }
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    [Inject]
    public INoSolutionAppealDataService NoSolutionAppealDataService { get; set; }
    [Inject]
    public IUserService UserService { get; set; }
    [Parameter]
    public string Period { get; set; }
    [Parameter]
    public int Year { get; set; }
    [Parameter]
    public string DepartmentName { get; set; }

    private string[] districtsList;
    private string[] districtsDescriptionList;

    protected override async Task OnInitializedAsync()
    {
        @if (!string.IsNullOrEmpty(DepartmentName))
        {
            districtsList = (await NoSolutionAppealDataService.GetNoSolutionAppealsByDistrictsForDepartment(DepartmentName, Period, Year)).ToArray();
        }
        else
        {
            districtsList = (await NoSolutionAppealDataService.GetNoSolutionAppealsByDistricts(Period, Year)).ToArray();
        }

        districtsDescriptionList = new string[districtsList.Length];

        for (int i = 0; i < districtsList.Length; i++)
        {
            districtsDescriptionList[i] = await UserService.GetUserDescription(districtsList[i]);
        }
        //Array.Sort(districtsDescriptionList);
    }
}
