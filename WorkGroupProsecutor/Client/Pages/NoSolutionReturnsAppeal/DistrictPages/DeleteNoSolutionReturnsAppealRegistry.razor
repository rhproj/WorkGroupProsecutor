@page "/deletenosolutionreturnsappeal/{DistrictName}/{Id:int}"

<div class="container">
    <h2 class="mt-3 mb-5 text-center fw-bold">Вы уверены что хотите удалить обращение @appeal.RegistrationNumber?</h2>
    <table class="table table-striped align-middle h3">
        <tbody>
            <tr class="pt-5">
                <td>ФИО заявителя / Наименование организации:</td>
                <td>@appeal.ApplicantFullName</td>
            </tr>
            <tr>
                <td>Принятое решение:</td>
                <td>@appeal.DepartmentResolution</td>
            </tr>
            <tr>
                <td>Основание принятого решения:</td>
                <td>@appeal.DecisionBasis</td>
            </tr>
            <tr>
                <td>Оценка возможности переадресации:</td>
                <td>@appeal.DepartmentAssessment</td>
            </tr>
        </tbody>
    </table>

    <div class="form-group text-center mt-5">
        <button class="btn btn-danger btn-lg" style="width:150px" @onclick="DeleteAppeal">Удалить</button>
        <button class="btn btn-secondary btn-lg" style="width:150px" @onclick="GotBack">Отмена</button>
    </div>
</div>

@code {
    [Inject]
    public INoSolutionReturnsAppealDataService NoSolutionAppealDataService { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string DistrictName { get; set; }

    private NoSolutionReturnsAppealModelDTO appeal = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            appeal = await NoSolutionAppealDataService.GetNoSolutionReturnsAppealById(Id);
        }
    }

    private async Task DeleteAppeal()
    {
        if (appeal != null)
        {
            await NoSolutionAppealDataService.DeleteNoSolutionReturnsAppeal(Id);
            GotBack();
        }
    }

    private void GotBack()
    {
        navManager.NavigateTo($"/nosolutionreturnsappealregistry/{DistrictName}/{appeal.PeriodInfo}/{appeal.YearInfo}");
    }
}