@page "/addredirectedappeal"
@using WorkGroupProsecutor.Shared.Models.Participants;
@inject NavigationManager navManager
@inject HttpClient httpClient

<h3>Создать запись Переадресация</h3>
<EditForm Model="@redirectedAppealModel" OnValidSubmit="SaveAppeal">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="RegistrationNumber" class="form-label">Регистрационный номер в системе Надзор-WEB:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="redirectedAppealModel.RegistrationNumber" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.RegistrationNumber)" />
    </div>
    <div class="mb-3">
        <label for="ApplicantFullName" class="form-label">ФИО заявителя</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="redirectedAppealModel.ApplicantFullName" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.ApplicantFullName)" />
    </div>

@*    <div class="mb-3">
        <label for="AppealClassification.Id" class="form-label">Характер обращения*:</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="redirectedAppealModel.AppealClassification.Id" />
        </div>

    </div>*@
    <div class="mb-3">
        <label for="AppealClassification.Id" class="form-label">Характер обращения*:</label>
@*        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="redirectedAppealModel.AppealClassification.Id" />
        </div>*@

        <InputSelect @bind-Value="@redirectedAppealModel.DepartmentId">
            <option value="">отдел:</option>
            @foreach (var department in departmentsList)
            {
                <option value="@department.Id">@department.DepartmentIndex: @department.DepartmentName</option>
            }
        </InputSelect>


    </div>

    <div class="mb-3">
        <label class="form-label">Орган, в который предполагается переадресовать обращение:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="redirectedAppealModel.RecipientAgency" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.RecipientAgency)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Основание переадресации:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="redirectedAppealModel.DecisionBasis" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.DecisionBasis)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Оценка возможности переадресации**:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="redirectedAppealModel.DepartmentAssessment" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.DepartmentAssessment)" />
    </div>

    <br/>
    <hr/>
    <div class="mb-3">
        <label class="form-label">Период:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="redirectedAppealModel.PeriodInfo" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.PeriodInfo)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Year:</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="redirectedAppealModel.YearInfo" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.YearInfo)" />
    </div>
    <div class="mb-3">
        <label class="form-label">District:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="redirectedAppealModel.District" />
        </div>
        <ValidationMessage For="@(() => redirectedAppealModel.District)" />
    </div>


    <div class="form-group">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button class="btn btn-light" @onclick="GoToRedirectedPage">Отменить</button>
    </div>
</EditForm>

<br />
<hr />
<div>
    <p>
        * В графе «Характер обращения» проставляется индекс подразделения аппарата прокуратуры Республики Татарстан,
        в компетенцию которого входит разрешение вопросов, поставленных заявителем: управление по надзору
        за исполнением федерального законодательства – 7, управление по надзору за следствием, дознанием и оперативно-разыскной деятельностью – 15, отдел по надзору за исполнением законодательства о несовершеннолетних и молодежи – 21, уголовно-судебное управление – 12, отдел по обеспечению участия прокуроров в гражданском и арбитражном процессе – 8,
        отдел по надзору за исполнением законов о федеральной безопасности, межнациональных отношениях, противодействии экстремизму и терроризму – 27, отдел по надзору за исполнением законодательства о противодействии коррупции – 86,
        отдел по надзору за исполнением законов в сфере оборонно-промышленного комплекса – 88.
    </p>

    <p class="my-0">
        ** Графа заполнятся руководителем подразделения аппарата прокуратуры Республики Татарстан, дающим соответствующую оценку с учетом следующего алгоритма <b>изучения обращений, по которым согласовывается переадресация в другое ведомство:</b>
    </p>
    <p>
        Оценка обоснованности переадресации регламентирована пунктом 1.3 решения коллегии от 28 апреля 2021 г., согласно требованиям которого необходимо обеспечивать объективное и окончательное разрешение каждого обращения
        в той прокуратуре, к компетенции которой относится решение вопроса; не допускать фактов необоснованного направления обращений на разрешение в другие органы и организации; в каждом случае учитывать значимость, распространенность, длительность нарушений, ранее принятые для их устранения меры.
    </p>
    <p class="my-0">Перенаправлению не подлежат обращения:</p>
    <ol class="pb-0 my-0">
        <li>
            Обращения о системных, грубых нарушениях закона, затрагивающие права значительного числа граждан или социально уязвимой категории населения (пункт 1.3 решения коллегии от 28 апреля 2021 г.);
        </li>
        <li>
            Обращения, в удовлетворении которых неоднократно отказывалось иными органами и организациями (пункт 1.3 решения коллегии от 28 апреля 2021 г.);
        </li>
        <li>
            Повторные обращения граждан, т.е. обращения, поступившие от одного и того же лица по одному
            и тому же вопросу. Повторность или первичность обращения следует определять посредством изучения надзорных производств
            по обращениям, а также рабочих карточек заявителей, сформированных в АИК «Надзор-WEB», в т.ч. посредством поискового запроса через «Справочники пользователей».
        </li>
        <li>Обращения, поступившие из аппарата прокуратуры Республики Татарстан (распоряжение прокурора Республики Татарстан от 30.04.2020 № 68/20р «О порядке рассмотрения обращений граждан Российской Федерации, иностранных граждан, лиц без гражданства, обращений и запросов должностных и иных лиц, поступивших в аппарат прокуратуры Республики Татарстан, относящихся к компетенции городских, районных, специализированных прокуратур или других ведомств»).</li>
        <li>Обращения, принятые на личном приеме руководством прокуратуры Республики Татарстан, прокуратур городов, районов и приравненных к ним специализированных прокуратур (пункт 1.3 решения коллегии от 28 апреля 2021 г.; информационное письмо прокуратуры Республики Татарстан от 08 июля 2022 г. № 25-12-2022);</li>
        <li>
            Обращения следующих категорий (информационное письмо прокуратуры Республики Татарстан
            от 08 июля 2022 г. № 25-12-2022):
            <ul class="list-unstyled">
                <li>
                    6.1 Обращения на действия судебных-приставов исполнителей в случаях:
                    поступления обращения о необоснованном списании денежных средств со счетов «двойников»;
                    поступления обращения на действия коллекторов;
                    поступления заявлений о необоснованном обращении взыскания на денежные средства граждан (наложении ареста), полученные в качестве социальных пособий и выплат.
                </li>
                <li>6.2 Обращения в сфере жилищно-коммунального хозяйства, связанные с аварийными ситуациями, повлекшими затопление помещений, отключение электричества, газоснабжения.</li>
                <li>6.3. Обращения граждан, нуждающихся в особой социальной защите (инвалидов 1 и 2 групп, участников ВОВ и других военных конфликтов, одиноких стариков – по всем вопросам).</li>
                <li>6.4. Обращения по поводу несвоевременной выплаты заработной платы.</li>
                <li>6.5. Обращения по вопросам необеспечения несовершеннолетних лекарственными препаратами, техническими средствами реабилитации, путевками в детские оздоровительные лагеря и на санаторное лечение.</li>
                <li>6.6. Обращения по вопросам выплаты пособий на несовершеннолетних детей, многодетным семьям, а также оказания иных мер социальной поддержки указанной категории граждан.</li>
                <li>6.7. Обращения по вопросам неисполнения судебных решений по требованиям имущественного характера в пользу несовершеннолетних.</li>
            </ul>
        </li>

    </ol>
</div>


@code {
    //[Inject]
    //public IRedirectedAppealDataService? RedirectedAppealDataService { get; set; }

    //private RedirectedAppealModel redirectedAppealModel = new();
    public RedirectedAppealModel redirectedAppealModel { get; set; } = new();
    private List<Department> departmentsList = new();

    //private int depaId; // { get; set; } //= new();

    //protected override async Task OnInitializedAsync()
    //{
    //    departmentsList = await httpClient.GetFromJsonAsync<List<Department>>("api/Department");
    //    // developersList = await HttpClient.GetFromJsonAsync<List<Developer>>("api/developer");
    //}
    protected override async Task OnParametersSetAsync()
    {
        departmentsList = await httpClient.GetFromJsonAsync<List<Department>>("api/Department");
    }

    private async Task SaveAppeal() //year and District will be added
    {   //myDepartment
        if (redirectedAppealModel.DepartmentId != 0)
        {
            redirectedAppealModel.Department = await httpClient.GetFromJsonAsync<Department>($"api/Department/{redirectedAppealModel.DepartmentId}");
            await httpClient.PostAsJsonAsync<RedirectedAppealModel>($"api/RedirectedAppeal", redirectedAppealModel);
        }
        //await RedirectedAppealDataService.AddRedirectedAppeal(appeal);
        GoToRedirectedPage();
    }

    private void GoToRedirectedPage()
    {
        navManager.NavigateTo($"/redirectedappealregistry/{redirectedAppealModel.PeriodInfo}");
    }
}
