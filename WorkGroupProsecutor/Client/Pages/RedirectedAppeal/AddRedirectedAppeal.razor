@page "/addredirectedappeal"
@inject NavigationManager navManager
@inject HttpClient httpClient

<h3>Создать запись Переадресация</h3>
<EditForm Model="@appeal" OnValidSubmit="SaveAppeal">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label class="form-label">Регистрационный номер в системе Надзор-WEB:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.RegistrationNumber" />
        </div>
@*        <ValidationMessage For="@(() => appeal.RegistrationNumber)" />*@
    </div>
@*    <div class="mb-3">
        <label class="form-label">ФИО заявителя</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.ApplicantFullName" />
        </div>
        <ValidationMessage For="@(() => appeal.ApplicantFullName)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Период:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.PeriodInfo" />
        </div>
        <ValidationMessage For="@(() => appeal.PeriodInfo)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Year:</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="appeal.YearInfo" />
        </div>
        <ValidationMessage For="@(() => appeal.YearInfo)" />
    </div>
    <div class="mb-3">
        <label class="form-label">District:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.District" />
        </div>
        <ValidationMessage For="@(() => appeal.District)" />
    </div>*@
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button class="btn btn-light" @onclick="GoToRedirectedPage">Отменить</button>
    </div>
</EditForm>


@code {
    [Inject]
    public IRedirectedAppealDataService? RedirectedAppealDataService { get; set; }

    private RedirectedAppealModel appeal = new();

    private async Task SaveAppeal() //year and District will be added
    {
        await httpClient.PostAsJsonAsync<RedirectedAppealModel>("api/RedirectedAppeal", appeal);
        //await RedirectedAppealDataService.AddRedirectedAppeal(appeal);

        GoToRedirectedPage();
    }

    private void GoToRedirectedPage()
    {
        navManager.NavigateTo($"/redirectedappealregistry/{appeal.PeriodInfo}");
    }
}
