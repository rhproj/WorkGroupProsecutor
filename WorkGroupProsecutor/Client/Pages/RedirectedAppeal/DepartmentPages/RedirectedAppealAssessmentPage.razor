@page "/redirectedappealassessment/{District}/{DepartmentName}/{Period}/{Year:int}"
@page "/redirectedappealassessment/{District}/{Period}/{Year:int}"
@*DEP, GUE*@

<div class="container-fluid m-1">
<h3 class="text-center my-3">Реестр обращений, предполагаемых к переадресации в иные органы и ведомства</h3>
<h3 class="text-center my-3">@districtDescription @Period @Year г.</h3>

  <table class="table table-bordered">
    <thead>
      <tr class="text-center align-middle">
        <th style="width: 1%">№</th>
        <th style="width: 10%">Регистрационный номер в системе Надзор-WEB</th>
        <th style="width: 15%">ФИО заявителя</th>
        <th style="width: 1%">Характер обращ- ения*</th>
        <th style="width: 20%">Орган, в который предполагается переадресовать обращение</th>
        <th style="width: auto">Основание переадресации</th>
        <th style="width: 10%">Оценка возможности переадресации**</th>
@*        <th>Примечание</th>*@
      </tr>
    </thead>
    @if (appealsList.Length == 0)
    {
    <tbody>
        <tr>
            <td align="center" colspan="10" style="border:none">
                <div class="py-5">
                    <div style="color: rgb(0,0,120)" class="la-timer la-2x">
                        <div></div>
                    </div>
                </div>
            </td>
        </tr>
    </tbody>
    }
    else
    {
    <tbody class="align-middle">
      @foreach (var appeal in appealsList)
      {
          <tr class="align-content-start">
              <td class="text-center">@num</td> <!--swap with counter-->
              <td class="text-center">
                  <a href=@appeal.NadzorHyperlink>@appeal.RegistrationNumber</a>
              </td>
              <td>@appeal.ApplicantFullName</td>
            @*<td class="text-center">@appeal.DepartmentId</td>*@
              @if (appeal.Department != null)
              {
                  <td class="text-center">@appeal.Department.DepartmentIndex</td>
              }
              else
              {
                  <td class="text-center"></td>
              }           
              <td>@appeal.RecipientAgency</td>
              <td>@appeal.DecisionBasis</td>
              @if (!UserState.User.IsInRole(Participants.Department))
              {
                <td class="text-center fw-bold">@appeal.DepartmentAssessment</td>
              }
              else
              {
                <td class="text-center fw-bold">
                    @if (string.IsNullOrEmpty(appeal.DepartmentAssessment))
                    {
                        <a href="/estimateredirectedappeal/@appeal.Id/@DepartmentName/@districtDescription" class="btn btn-outline-primary">Оценить</a>
                    }
                    else
                    {
                        <p>@appeal.DepartmentAssessment</p>
                        <a href="/estimateredirectedappeal/@appeal.Id/@DepartmentName/@districtDescription" class="btn btn-outline-secondary">Изменить</a> 
                    }                     
                </td>
                @* <td> <a href="/deleteredirectedappeal/@appeal.Id" class="btn btn-outline-dark">Удалить</a> </td> *@           
              }
          </tr> num++;
      }
    </tbody>
    }
  </table>
  <div class="mt-5">
        <RedirectedAppealCommentsComponent />
    </div>
 </div>


@code {
    [Inject]
    public IUserService UserService { get; set; }
    [Inject]
    public IRedirectedAppealDataService? RedirectedAppealDataService { get; set; }
    [CascadingParameter(Name = "UserState")]
    public AuthenticationState UserState { get; set; }

    [Parameter]
    public string District { get; set; }    
    [Parameter]
    public string DepartmentName { get; set; }
    [Parameter]
    public string Period { get; set; }
    [Parameter]
    public int Year { get; set; }

    private string districtDescription;
    private int num;

    private RedirectedAppealModelDTO[] appealsList = new RedirectedAppealModelDTO[] { };

    protected override async Task OnInitializedAsync()
    {
        num = 1;
        districtDescription = await UserService.GetUserDescription(District);

        if (!UserState.User.IsInRole(Participants.Department))
        {
            appealsList = (await RedirectedAppealDataService.GetAllRedirectedAppeals(District, Period, Year)).ToArray(); //districtName
        }
        else
        {
            appealsList = (await RedirectedAppealDataService.GetAllRedirectedAppealsByDepartment(District, DepartmentName, Period, Year)).ToArray();
        }
    }
}