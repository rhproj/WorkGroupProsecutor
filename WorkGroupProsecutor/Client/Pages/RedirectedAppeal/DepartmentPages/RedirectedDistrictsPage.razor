@page "/redirecteddistrictspage/{Period}/{Year:int}"
@page "/redirecteddistrictspage/{DepartmentName}/{Period}/{Year:int}"
@*DEP, GUE*@

<div class="container-fluid mt-2 text-center">
    <h2 class="mb-5">Реестры обращений, предполагаемых к переадресации в иные органы и ведомства <span class="fw-bold">@Period.@Year г.</span> </h2>
@if (districtsDict.Count == 0)
{
<div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 800px; background-repeat: no-repeat; background-position: center;">
    <div class="d-flex justify-content-center  align-items-center" style="height: 700px">
            <div style="color: rgb(0,0,120)" class="la-timer la-2x">
                <div></div>
            </div>
    </div>
</div>
}
else
{
<div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 800px; background-repeat: no-repeat; background-position: center;">
<div>
    <table class="table table-striped align-middle text-center ">
        <thead class="table-primary">
            <tr>
                <th></th>

            </tr>
        </thead>
        <tbody>
        @foreach (var district in districtsDict)
        {
           <tr style="height:100px">
               <td class="fs-3">
                   <div class="d-flex justify-content-center">
                       <div class="my-3">@district.Key</div>
                       <div class="mx-4">                    
                       @if (!string.IsNullOrEmpty(DepartmentName))
                       {
                           <a href="/redirectedappealassessment/@district.Value/@DepartmentName/@Period/@Year" class="btn btn-outline-primary"><img src="img/edit32.png" width="50" height="50" class="mt-2" /></a>
                       }
                       else
                       {
                            <a href="/redirectedappealassessment/@district.Value/@Period/@Year" class="btn btn-outline-primary"><img src="img/edit32.png" width="50" height="50" class="mt-2"/></a>                          
                       }
                       </div>
                   </div>
               </td>
           </tr>
        }
        </tbody>
    </table>   
</div>    
</div>
}
</div>

@code {
    [Inject]
    public IRedirectedAppealDataService RedirectedAppealDataService { get; set; }
    [Inject]
    public IUserService UserService { get; set; }
    [Parameter]
    public string Period { get; set; }
    [Parameter]
    public int Year { get; set; }
    [Parameter]
    public string DepartmentName { get; set; }

    private SortedDictionary<string, string> districtsDict = new ();

    protected override async Task OnInitializedAsync()
    {
        string[] districtsList;

        @if (!string.IsNullOrEmpty(DepartmentName))
        {
            districtsList = (await RedirectedAppealDataService.GetRedirectedAppealsByDistrictsForDepartment(DepartmentName, Period, Year)).ToArray();
        }
        else
        {
            districtsList = (await RedirectedAppealDataService.GetRedirectedAppealsByDistricts(Period, Year)).ToArray();
        }

        for (int i = 0; i < districtsList.Length; i++)
        {
            districtsDict.Add(await UserService.GetUserDescription(districtsList[i]), districtsList[i]);
        }
    }
}