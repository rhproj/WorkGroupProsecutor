@*@page "/addredirectedappeal/{Year:int}"*@
@page "/addredirectedappeal/{DistrictName}/{Period}/{Year:int}"
@page "/updateredirectedappeal/{DistrictName}/{Id:int}"
@attribute [Authorize(Roles = @Participants.District)]


<div class="container">
<h1 class="mt-3 mb-5 text-center">Создать запись: Переадресация  @appeal.PeriodInfo.@appeal.YearInfo</h1>
<EditForm Model="@appeal" OnValidSubmit="SaveAppeal" class="h3">
    <DataAnnotationsValidator />

    <div class="mb-4">
        <label for="RegistrationNumber" class="form-label">Регистрационный номер в системе Надзор-WEB:</label>
        <div class="col-md-4 w-100">
            <InputText class="form-control form-control-lg" @bind-Value="appeal.RegistrationNumber" />
        </div>
        <ValidationMessage For="@(() => appeal.RegistrationNumber)" />
    </div>

    <div class="mb-4">
        <label for="RegistrationNumber" class="form-label">Cсылка в системе Надзор-WEB:</label>
        <div class="col-md-4 w-100">
            <InputText class="form-control form-control-lg" @bind-Value="appeal.NadzorHyperlink" />
        </div>
        <ValidationMessage For="@(() => appeal.NadzorHyperlink)" />
    </div>

    <div class="mb-5">
        <label for="ApplicantFullName" class="form-label">ФИО заявителя / Наименование организации:</label>
        <div class="col-md-4 w-100">
                <InputText class="form-control form-control-lg" @bind-Value="appeal.ApplicantFullName" />
        </div>
        <ValidationMessage For="@(() => appeal.ApplicantFullName)" />
    </div>

    <div class="mb-5">
        <label for="AppealClassification.Id" class="form-label me-3">Характер обращения*:</label>
        <InputSelect @bind-Value="@appeal.DepartmentId" class="form-control-lg">
            <option value="">отдел:</option>
            @foreach (var department in departmentsList)
            {
                <option value="@department.Id">@department.DepartmentIndex: @department.DepartmentName</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => appeal.DepartmentId)" />
    </div>

    <div class="mb-4">
        <label class="form-label">Орган, в который предполагается переадресовать обращение:</label>
        <div class="col-md-4 w-100">
            <InputTextArea class="form-control form-control-lg" rows="4" @bind-Value="appeal.RecipientAgency" />
            @*<InputText class="form-control form-control-lg" @bind-Value="appeal.RecipientAgency" />*@
        </div>
        <ValidationMessage For="@(() => appeal.RecipientAgency)" />
    </div>

    <div class="mb-4">
        <label class="form-label">Основание переадресации:</label>
        <div class="col-md-4 w-100">
            <InputTextArea class="form-control form-control-lg" rows="4" @bind-Value="appeal.DecisionBasis" />
        </div>
        <ValidationMessage For="@(() => appeal.DecisionBasis)" />
    </div>

    <div class="input-group mb-5 input-group-lg">
        <div class="input-group-prepend">
            <button class="btn btn-outline-secondary btn-lg" type="button" @onclick=ChangePeriod>Изменить дату:</button>
        </div>
        <div>
            <InputText class="form-control form-control-lg" disabled=@isEditable placeholder="'число'.'месяц'" aria-label="PeriodInfo" aria-describedby="basic-addon1" @bind-Value="appeal.PeriodInfo" />
        </div>
        <ValidationMessage For="@(() => appeal.PeriodInfo)" />
    </div>
    <div class="form-group mt-4 mb-4">
        <button type="submit" class="btn btn-primary btn-lg">Сохранить</button>
        <button class="btn btn-light btn-lg" @onclick="GoToRedirectedPage">Отменить</button>
    </div>
</EditForm>

<hr />
<RedirectedAppealCommentsComponent />
</div>


@code {
    [Inject]
    public IRedirectedAppealDataService RedirectedAppealDataService { get; set; }
    //private RedirectedAppealModel redirectedAppealModel = new();
    [Inject]
    public IDepartmentService DepartmentService { get; set; }

    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int Year { get; set; }
    [Parameter]
    public string Period { get; set; }
    private bool isEditable;

    public RedirectedAppealModelDTO appeal { get; set; } = new();
    private List<Department> departmentsList = new();

    //[CascadingParameter(Name = "DistrictName")]
    [Parameter]
    public string DistrictName { get; set; }

    //protected override async Task OnInitializedAsync()
    //{
    //    departmentsList = await httpClient.GetFromJsonAsync<List<Department>>("api/Department");
    //    // developersList = await HttpClient.GetFromJsonAsync<List<Developer>>("api/developer");
    //}
    protected override async Task OnInitializedAsync()
    {
        isEditable = true;
        departmentsList = (await DepartmentService.GetAllDepartments()).ToList();      //httpClient.GetFromJsonAsync<List<Department>>("api/Department");
        if (Id == 0)
        {
            appeal.YearInfo = Year;
            appeal.PeriodInfo = Period;
            appeal.District = DistrictName;
        }
        else
        {
            appeal = await RedirectedAppealDataService.GetRedirectedAppealById(Id);
        }
    }

    private void ChangePeriod()
    {
        isEditable = !isEditable;
    }

    private async Task SaveAppeal() //year and District will be added
    {
        //await httpClient.PostAsJsonAsync<RedirectedAppealModelDTO>("api/RedirectedAppeal", appeal);
        //await RedirectedAppealDataService.AddRedirectedAppeal(appeal);
        if (!string.IsNullOrWhiteSpace(appeal.NadzorHyperlink)&&!appeal.NadzorHyperlink.StartsWith("http://"))
        {
            appeal.NadzorHyperlink = null;
        }

        if (Id == 0)
        {
            await RedirectedAppealDataService.AddRedirectedAppeal(appeal);
        }
        else
        {
            await RedirectedAppealDataService.UpdateRedirectedAppeal(appeal);
            //await httpClient.PutAsJsonAsync<RedirectedAppealModelDTO>("api/RedirectedAppeal", appeal);
            //HttpClient.PutAsJsonAsync<Developer>("api/developer", developer);  //<Developer>
        }

        GoToRedirectedPage();
    }

    private void GoToRedirectedPage()
    {
        navManager.NavigateTo($"/redirectedappealregistry/{DistrictName}/{appeal.PeriodInfo}/{appeal.YearInfo}");
        //navManager.NavigateTo($"/redirectedappealregistry/{appeal.PeriodInfo}/{appeal.YearInfo}");
    }
}