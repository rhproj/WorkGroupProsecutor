@page "/redirectedpage/{Year:int}"

<div class="container-fluid mt-2 text-center">
    <h1 class="mb-5">Реестры обращений, предполагаемых к переадресации в иные органы и ведомства</h1>
<AuthorizeView Roles=@Participants.District>
    <Authorized>
            <div class="d-inline-flex mb-3 w-75 h3">
                <div class="mt-1">
                    <label>Дата: </label>
                </div>
                <div class="mt-1 ms-3 me-3">
                    <input type="date" @bind=dateTime />
                </div>
               @if (dateTime.Date >= DateTime.Now && (dateTime.DayOfWeek == DayOfWeek.Monday || dateTime.DayOfWeek == DayOfWeek.Thursday))
               {
               <div>
                   <button class="btn btn-primary btn-lg" @onclick="NavigateToAddPage">
                       Создать запись
                   </button>
               </div>
               }
               else
               {
               <div class="mt-2">
                    <h4 class="text-success fst-italic">Выберите последующий день регистрации обращений (пн, чт)</h4>
               </div>
               }
            </div>
    </Authorized>
</AuthorizeView>

@if (periodsList == null)
{
    <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 800px; background-repeat: no-repeat; background-position: center;">
        <div class="d-flex justify-content-center  align-items-center" style="height: 700px">
                <div style="color: rgb(0,0,120)" class="la-timer la-2x">
                    <div></div>
                </div>
        </div>
    </div>
}
else if (periodsList.Length == 0)
{
      <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 800px; background-repeat: no-repeat; background-position: center;">
         <h2 class="text-secondary">Отсутствуют данные за заданный период</h2>
     </div>
}
else
{
<div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 800px; background-repeat: no-repeat; background-position: center;">

<div>
    <table class="table table-striped align-middle text-center ">
        <thead class="table-primary">
            <tr>
                <th></th>

            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < periodsList.Length; i++)
            {
                <tr style="height:100px">
                    <td class="fs-2">
                        <div class="d-flex justify-content-center">
                            <div class="my-3">@periodsList[i].@Year Переадресация </div>
                            <div class="mx-4">
                                @if (UserState.User.IsInRole(Participants.District))
                                {
                                    <a href="/redirectedappealregistry/@DistrictName/@periodsList[i]/@Year" class="btn btn-outline-primary"><img src="img/edit32.png" width="50" height="50" class="mt-2" /></a>
                                }
                                else if (UserState.User.IsInRole(Participants.Department))
                                {
                                    <a href="/redirecteddistrictspage/@DistrictName/@periodsList[i]/@Year" class="btn btn-outline-primary"><img src="img/open32.png" width="50" height="50" class="mt-2" /></a>
                                    if (unansweredsByPeriod[i] != 0)
                                    {
                                        <a href="/redirectedunanswered/@DistrictName/@periodsList[i]/@Year" class="text-underline-hover">
                                            <span class="ms-3 fs-3 fst-italic">Не рассмотрено: @unansweredsByPeriod[i]</span>
                                        </a>
                                    }
                                }
                                else
                                {
                                    <a href="/redirecteddistrictspage/@periodsList[i]/@Year" class="btn btn-outline-primary"><img src="img/open32.png" width="50" height="50" class="mt-2" /></a>
                                }
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>    
</div>
</div>
}
</div>



@code {
    [Inject]
    public IRedirectedAppealDataService? RedirectedAppealDataService { get; set; }

    [CascadingParameter(Name = "UserState")]
    public AuthenticationState UserState { get; set; }
    [CascadingParameter(Name = "DistrictName")]
    public string DistrictName { get; set; }

    [Parameter]
    public int Year { get; set; }
    private string period;
    private bool isOpen;
    private string[] periodsList;

    private DateTime dateTime;
    private int[]? unansweredsByPeriod;

    protected override async Task OnInitializedAsync()
    {
        if (UserState!= null && UserState.User.IsInRole(Participants.District))
        {
            periodsList = (await RedirectedAppealDataService.GetRedirectedPeriodsByDistrict(DistrictName, Year)).OrderByDescending(p => DateOnly.Parse(p)).ToArray();
            dateTime = DateTime.Now;
        }
        else if (UserState != null && UserState.User.IsInRole(Participants.Department))
        {
            periodsList = (await RedirectedAppealDataService.GetRedirectedPeriodsForDepartment(DistrictName, Year)).OrderByDescending(p => DateOnly.Parse(p)).ToArray();

            unansweredsByPeriod = new int[periodsList.Length];

            for (int i = 0; i < unansweredsByPeriod.Length; i++)
            {
                unansweredsByPeriod[i] = await RedirectedAppealDataService.GetUnansweredNumberForDepartment(DistrictName, periodsList[i], Year);
            }
        }
        else
        {
            periodsList = (await RedirectedAppealDataService.GetAllRedirectedPeriods(Year)).OrderByDescending(p => DateOnly.Parse(p)).ToArray();
        }
    }

    private void NavigateToAddPage()
    {
        navManager.NavigateTo($"/addredirectedappeal/{DistrictName}/{dateTime.ToString("dd.MM")}/{Year}");
    }
}