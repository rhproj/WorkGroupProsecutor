@*@page "/addredirectedappeal/{Year:int}"*@
@page "/addredirectedappeal/{Period}/{Year:int}"
@page "/updateredirectedappeal/{Id:int}"
@attribute [Authorize(Roles = @Participants.District)]

@*@using WorkGroupProsecutor.Shared.Models.Appeal.DTO;
@using WorkGroupProsecutor.Shared.Models.Participants;*@
@*@inject NavigationManager navManager*@
@*@inject HttpClient httpClient*@

<h3>Создать запись Переадресация за @appeal.PeriodInfo @appeal.YearInfo</h3>
<EditForm Model="@appeal" OnValidSubmit="SaveAppeal">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="RegistrationNumber" class="form-label">Период:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.PeriodInfo" />
        </div>
        <ValidationMessage For="@(() => appeal.RegistrationNumber)" />
    </div>
    <div class="mb-3">
        <label for="RegistrationNumber" class="form-label">Регистрационный номер в системе Надзор-WEB:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.RegistrationNumber" />
        </div>
        <ValidationMessage For="@(() => appeal.RegistrationNumber)" />
    </div>
    <div class="mb-3">
        <label for="ApplicantFullName" class="form-label">ФИО заявителя</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.ApplicantFullName" />
        </div>
        <ValidationMessage For="@(() => appeal.ApplicantFullName)" />
    </div>

@*    <div class="mb-3">
        <label for="AppealClassification.Id" class="form-label">Характер обращения*:</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="redirectedAppealModel.AppealClassification.Id" />
        </div>

    </div>*@
    <div class="mb-3">
        <label for="AppealClassification.Id" class="form-label">Характер обращения*:</label>
@*        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="redirectedAppealModel.AppealClassification.Id" />
        </div>*@

        <InputSelect @bind-Value="@appeal.DepartmentId">
            <option value="">отдел:</option>
            @foreach (var department in departmentsList)
            {
                <option value="@department.Id">@department.DepartmentIndex: @department.DepartmentName</option>
            }
        </InputSelect>


    </div>

    <div class="mb-3">
        <label class="form-label">Орган, в который предполагается переадресовать обращение:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.RecipientAgency" />
        </div>
        <ValidationMessage For="@(() => appeal.RecipientAgency)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Основание переадресации:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.DecisionBasis" />
        </div>
        <ValidationMessage For="@(() => appeal.DecisionBasis)" />
    </div>
@*    <div class="mb-3">
        <label class="form-label">Оценка возможности переадресации**:</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="appeal.DepartmentAssessment" />
        </div>
        <ValidationMessage For="@(() => appeal.DepartmentAssessment)" />
    </div>*@

    <br/>
    <hr/>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button class="btn btn-light" @onclick="GoToRedirectedPage">Отменить</button>
    </div>
</EditForm>

<br />
<hr />
<RedirectedAppealCommentsComponent />


@code {
    [Inject]
    public IRedirectedAppealDataService RedirectedAppealDataService { get; set; }
    //private RedirectedAppealModel redirectedAppealModel = new();
    [Inject]
    public IDepartmentService DepartmentService { get; set; }

    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int Year { get; set; }
    [Parameter]
    public string Period { get; set; }

    public RedirectedAppealModelDTO appeal { get; set; } = new();
    private List<Department> departmentsList = new();

    [CascadingParameter(Name = "DistrictName")]
    public string DistrictName { get; set; }

    //protected override async Task OnInitializedAsync()
    //{
    //    departmentsList = await httpClient.GetFromJsonAsync<List<Department>>("api/Department");
    //    // developersList = await HttpClient.GetFromJsonAsync<List<Developer>>("api/developer");
    //}
    protected override async Task OnInitializedAsync()
    {
        departmentsList = (await DepartmentService.GetAllDepartments()).ToList();      //httpClient.GetFromJsonAsync<List<Department>>("api/Department");
        if (Id == 0)
        {
            appeal.YearInfo = Year;
            appeal.PeriodInfo = Period;
            appeal.District = DistrictName; //"Az"; //swap with actual param
        }
        else
        {
            appeal = await RedirectedAppealDataService.GetRedirectedAppealById(Id);
        }
    }

    private async Task SaveAppeal() //year and District will be added
    {
        //await httpClient.PostAsJsonAsync<RedirectedAppealModelDTO>("api/RedirectedAppeal", appeal);
        //await RedirectedAppealDataService.AddRedirectedAppeal(appeal);

        if (Id == 0)
        {
            await RedirectedAppealDataService.AddRedirectedAppeal(appeal);
        }
        else
        {
            await RedirectedAppealDataService.UpdateRedirectedAppeal(appeal);
            //await httpClient.PutAsJsonAsync<RedirectedAppealModelDTO>("api/RedirectedAppeal", appeal);
            //HttpClient.PutAsJsonAsync<Developer>("api/developer", developer);  //<Developer>
        }

        GoToRedirectedPage();
    }

    private void GoToRedirectedPage()
    {
        navManager.NavigateTo($"/redirectedappealregistry/{appeal.PeriodInfo}/{appeal.YearInfo}");
    }
}
