@page "/satisfieddistrictspage/{Period}/{Year:int}"
@page "/satisfieddistrictspage/{DepartmentName}/{Period}/{Year:int}"
@*DEP, GUE*@

<div class="container-fluid mt-2 text-center">
    <h2>Реестры обращений, по которым приняты решения "Удовлетворено" и "Удовлетворено частично"</h2>
    <h2 class="mb-4">@ReferencePeriod.Quarters[Period] @Year г.</h2>
    @if (districtsList == null)
    {
        <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 780px; background-repeat: no-repeat; background-position: center;">
            <div class="d-flex justify-content-center  align-items-center" style="height: 700px">
                <div style="color: rgb(0,0,120)" class="la-timer la-2x">
                    <div></div>
                </div>
            </div>
        </div>
    }
    else if (districtsList.Length == 0)
    {
        <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 780px; background-repeat: no-repeat; background-position: center;">
            <h2 class="text-secondary">Отсутствуют данные за заданный период</h2>
        </div>
    }
    else
    {
        <div class="container overflow-auto" style="background-image: url('img/BG5.jpg'); height: 780px; background-repeat: no-repeat; background-position: center;">
            <div>
                <table class="table table-striped align-middle text-center ">
                    <thead class="table-primary">
                        <tr>
                            <th></th>

                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var district in districtsDict)
                    {
                    <tr style="height:100px">
                        <td class="fs-3">
                            <div class="d-flex justify-content-center">
                                <div class="my-3">@district.Key</div>
                                <div class="mx-4">
                                    @if (!string.IsNullOrEmpty(DepartmentName))
                                    {
                                        <a href="/satisfiedappealassessment/@district.Value/@DepartmentName/@Period/@Year" class="btn btn-outline-primary"><img src="img/edit32.png" width="50" height="50" class="mt-2" /></a>
                                    }
                                    else
                                    {
                                        <a href="/satisfiedappealassessment/@district.Value/@Period/@Year" class="btn btn-outline-primary"><img src="img/edit32.png" width="50" height="50" class="mt-2" /></a>
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    [Inject]
    public ISatisfiedAppealDataService SatisfiedAppealDataService { get; set; }
    [Inject]
    public IUserService UserService { get; set; }
    [Parameter]
    public string Period { get; set; }
    [Parameter]
    public int Year { get; set; }
    [Parameter]
    public string DepartmentName { get; set; }

    string[] districtsList; //v
    private SortedDictionary<string, string> districtsDict;//v

    protected override async Task OnInitializedAsync()
    {

        @if (!string.IsNullOrEmpty(DepartmentName))
        {
            districtsList = (await SatisfiedAppealDataService.GetSatisfiedAppealsByDistrictsForDepartment(DepartmentName, Period, Year)).ToArray();
        }
        else
        {
            districtsList = (await SatisfiedAppealDataService.GetSatisfiedAppealsByDistricts(Period, Year)).ToArray();
        }

        if (districtsList.Length > 0)
        {
            districtsDict = new();
            for (int i = 0; i < districtsList.Length; i++)  //v
            {
                districtsDict.Add(await UserService.GetUserDescription(districtsList[i]), districtsList[i]);
            }
        }
    }
}
